{"version":3,"sources":["SearchForm.js","MovieResults.js","Card.js","TopNav.js","Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","preventDefault","react_default","a","createElement","onSubmit","type","onChange","Component","MovieResults","clickHandler","e","console","log","id","list","_this2","results","length","map","movie","index","key","className","Title","onClick","Card","arr","obj","d","JSON","parse","stringify","data","_i","_Object$entries","entries","_ref3","_ref2","slicedToArray","push","concat","renderDetails","src","Poster","alt","Year","href","n","TopNav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Jumbotron","App","movies","text","selectedMovie","loadData","jsonData","val","fetch","then","response","json","myJson","Search","prevstate","_this3","src_TopNav","src_Jumbotron","src_SearchForm","src_MovieResults","src_Card","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ad24f81.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'Jaws'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    // alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    \n    this.props.handleSubmit(this.state.value);\n    this.setState({value: ''});\n    // this.props.handleSubmit()\n\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Title:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;","import React, { Component } from 'react';\n// import Movie from './Movie'\n\nclass MovieResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'Jaws'};\n\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n\n  clickHandler(e) {\n    e.preventDefault();\n    console.log(e.target.id);\n    this.props.clickHandler(e.target.id);\n  \n  }\n\n\n  render() {\n    let list;\n    if (this.props.results.length > 0) {\n      list = this.props.results.map((movie, index) =>\n        <li key={index} className=\"d-flex list-group-item justify-content-between\">\n          <div>{movie.Title}</div>\n          <div>\n            <button \n              id={movie.Title}\n              onClick={this.clickHandler} \n              type=\"button\" \n              className=\"btn btn-primary btn-sm\">select\n            </button>\n          </div>\n          \n        </li>\n      );\n    } else {\n      return null\n    }\n    \n    return (\n      \n      <div id='results' className=\"container\">\n        <h4>Results:</h4>\n        <ul className=\"list-group\">\n          {list} \n        </ul>\n      </div>\n    );\n  }\n}\nexport default MovieResults;","import React, { Component } from 'react';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.arr = [];\n\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n\n  // handleSubmit(event) {\n  //   // alert('A name was submitted: ' + this.state.value);\n  //   event.preventDefault();\n    \n  //   this.props.handleSubmit(this.state.value);\n  //   this.setState({value: ''});\n  //   this.props.handleSubmit()\n\n  // }\n  renderDetails(obj){\n    let d = JSON.parse(JSON.stringify(this.props.data));\n    for (let [key, value] of Object.entries(d)) {\n        if (key === 'Poster' || key === 'Ratings'  || key === 'Response'\n            || key === 'Type' || key === 'DVD' || key === 'Website'\n            || key === 'Metascore' || key === 'imdbRating' || key ==='imdbVotes')  continue;\n        this.arr.push(`${key}: ${value}`);\n    }\n  }\n  \n\n  render() {\n    let data = JSON.parse(JSON.stringify(this.props.data))\n    if(data != null){\n        this.renderDetails();\n        return (\n            <div className=\"row\">\n                <div className=\"card text-center\">\n                    <img src={data.Poster} className=\"card-img-top\" alt=\"movie poster\"/>\n                    {/*<div className=\"card-header\">\n                        {data.Title}\n                    </div>*/}\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{data.Title} {data.Year}</h5>\n                        <a href=\"/\" className=\"btn btn-primary\">Save</a>\n                    </div>\n                    <ul className=\"list-group list-group-flush\">\n                      {\n                       this.arr.map( (n) => <li className=\"list-group-item\">{n}</li>)\n                      }\n                    </ul>\n                    <div className=\"card-footer text-muted\">\n                        2 days ago\n                    </div>\n                </div>\n            </div>\n            \n        );\n    } else {\n        return null\n    }\n    \n  }\n}\n\nexport default Card;\n\n\n\n","import React, { Component } from 'react';\n\nconst TopNav = (props) => {\n  const greeting = 'Hello Function Component!';\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/\">Top Ten</a>\n          </li>\n          \n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/\">Disabled</a>\n          </li>\n        </ul>\n        \n      </div>\n    </nav>\n  )\n}\n\n  export default TopNav;\n","import React from 'react';\nimport './jumbotron.scss';\n\n\nconst Jumbotron = (props) => {\n  const greeting = 'Hello Function Component!';\n\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n          <h1 className=\"\">Cinema Search</h1>\n          <p className=\"lead\">This is a modified jumbotron that occupies the entire horizontal space of its parent.</p>\n      </div>\n    </div>)\n}\n\nexport default Jumbotron;","import React, { Component } from 'react';\nimport SearchForm from './SearchForm';\nimport MovieResults from './MovieResults';\nimport Card from './Card';\nimport TopNav from './TopNav';\nimport Jumbotron from './Jumbotron';\n// import API from 'API';\nimport jsonData from'./data.json';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      movies: [], \n      text: '',\n      results:[],\n      selectedMovie: null\n       \n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  componentDidMount(){ \n    const loadData = JSON.parse(JSON.stringify(jsonData));\n    console.log('componentDidMount',loadData);\n\n  }\n  componentWillUnmount() {}\n  componentDidUpdate(){ console.log('componentDidUpdate') }\n  shouldComponentUpdate(){return true}\n\n  handleSubmit(val) {\n    // e.preventDefault();\n    console.log('handleSubmit')\n    fetch(`http://www.omdbapi.com/?apikey=a36e0862&s=${val}`)\n    .then( (response) => {\n        return response.json();\n    })\n    .then( (myJson) => {\n        // console.log(JSON.stringify(myJson));\n        let movies = (myJson.Search ? myJson.Search : []);\n        // obj = JSON.parse(myJson);\n        this.setState((prevstate, props) => ({\n          results: movies\n        })) \n    });\n  }\n\n  clickHandler(val) {\n\n    console.log(val)\n    fetch(`http://www.omdbapi.com/?apikey=a36e0862&t=${val}&plot=full`)\n      .then( (response) => {\n        return response.json();\n      })\n      .then( (myJson) => {\n        // console.log(JSON.stringify(myJson));\n        console.log(myJson.Title, myJson)\n        this.setState((state, props) => ({\n          selectedMovie: myJson\n        })) \n    });\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <TopNav />\n        <Jumbotron />\n        \n        <div className=\"container\">\n            <h1>Movies</h1>\n            <SearchForm handleSubmit={this.handleSubmit}/>\n            <MovieResults clickHandler={this.clickHandler} results={this.state.results}/>\n        </div>\n        \n        <div>{<Card data={this.state.selectedMovie}/>}</div>\n        <footer className=\"footer bg-inverse\">\n          <div className=\"container\">\n            <span className=\"text-muted\">copyright 2018</span>\n        </div>\n  </footer>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nimport 'bootstrap';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}